@inject CartService cartService

@if (IsVisible)
{
    <div class="cart-modal">
        <div class="cart-modal__content">
            <button class="cart-modal__close-btn" @onclick="Close">X</button>
            <h2>Your Cart</h2>
            @if (cartService.GetItemCount() > 0)
            {
                @foreach (var order in cartService.GetCurrentOrders())
                {
                    <div class="cart-item">
                        <img src="@order.ImageUrl" alt="@order.MenuItemName" class="cart-item__image" />
                        <div class="cart-item__details">
                            <h4>@order.MenuItemName</h4>
                            <p>Quantity: @order.Quantity</p>
                            <p>Total: $@order.TotalPrice</p>
                        </div>
                    </div>
                }
            }
            else
            {
                <p>Your cart is empty.</p>
            }
            <button class="cart-modal__checkout-btn" @onclick="Checkout">Checkout</button>
        </div>
    </div>
}


@code {
    [Parameter] public bool IsVisible { get; set; }
    [Parameter] public EventCallback OnClose { get; set; }

    private void Close() => OnClose.InvokeAsync();

    private void Checkout()
    {
        // Implement checkout functionality
    }
}

